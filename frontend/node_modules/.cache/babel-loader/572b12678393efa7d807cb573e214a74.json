{"ast":null,"code":"var _jsxFileName = \"G:\\\\.Work\\\\.Personal\\\\Website\\\\frontend\\\\src\\\\components\\\\Charts\\\\salasLimpeza.js\",\n    _s = $RefreshSig$();\n\nimport \"chartjs-adapter-date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport authHeader from \"../../services/auth-header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SalaLimpeza = entrada => {\n  _s();\n\n  const [tableInfo, setTableInfo] = useState([]);\n\n  function addTimeOnString(hora, minutos, incremento) {\n    var h = parseInt(hora);\n    var m = parseInt(minutos); //adicionar o incremento\n\n    m += parseInt(incremento);\n\n    while (m >= 60) {\n      h += 1;\n      m -= 60;\n    } // juntar as string\n\n\n    if (h < 10) h = \"0\" + h;\n    if (m < 10) m = \"0\" + m;\n    const horaFormatada = h + \":\" + m;\n    return horaFormatada;\n  }\n\n  useEffect(() => {\n    if (entrada.centroSelecionada.length != 0) {\n      axios.get(\"https://softinsa-reunions-back.herokuapp.com/reservas/getListByLimpeza/\" + entrada.centroSelecionada, {\n        headers: authHeader()\n      }).then(res => {\n        setTableInfo(res.data.data);\n      }).catch(error => {});\n    }\n  }, [entrada.centroSelecionada]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome da Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hora do Fim da Limpeza\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nr\\xBA Participantes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableInfo === null || tableInfo === void 0 ? void 0 : tableInfo.filter(info => {\n          const tempo = new Date().toLocaleTimeString();\n          return info.horaFim < addTimeOnString(tempo.slice(0, 2), tempo.slice(3, 5), info.tempo_limpeza) && info.horaFim > tempo.slice(0, 5);\n        }).map((info, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.id_reserva\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.nomesala\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.horaFim.slice(0, 5)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Em limpeza...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.nr_participantes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SalaLimpeza, \"NBWeodA9h7H2CcmO4Hl5/7/yd9E=\");\n\n_c = SalaLimpeza;\nexport default SalaLimpeza;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaLimpeza\");","map":{"version":3,"names":["React","useEffect","useState","Table","axios","authHeader","SalaLimpeza","entrada","tableInfo","setTableInfo","addTimeOnString","hora","minutos","incremento","h","parseInt","m","horaFormatada","centroSelecionada","length","get","headers","then","res","data","catch","error","filter","info","tempo","Date","toLocaleTimeString","horaFim","slice","tempo_limpeza","map","index","id_reserva","nomesala","nr_participantes"],"sources":["G:/.Work/.Personal/Website/frontend/src/components/Charts/salasLimpeza.js"],"sourcesContent":["import \"chartjs-adapter-date-fns\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst SalaLimpeza = (entrada) => {\r\n  const [tableInfo, setTableInfo] = useState([]);\r\n\r\n  function addTimeOnString(hora, minutos, incremento) {\r\n    var h = parseInt(hora);\r\n    var m = parseInt(minutos);\r\n    //adicionar o incremento\r\n    m += parseInt(incremento);\r\n    while (m >= 60) {\r\n      h += 1;\r\n      m -= 60;\r\n    }\r\n    // juntar as string\r\n    if (h < 10) h = \"0\" + h;\r\n    if (m < 10) m = \"0\" + m;\r\n    const horaFormatada = h + \":\" + m;\r\n    return horaFormatada;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (entrada.centroSelecionada.length != 0) {\r\n      axios\r\n        .get(\"https://softinsa-reunions-back.herokuapp.com/reservas/getListByLimpeza/\" + entrada.centroSelecionada, {\r\n          headers: authHeader(),\r\n        })\r\n        .then((res) => {\r\n          setTableInfo(res.data.data);\r\n        })\r\n        .catch((error) => {});\r\n    }\r\n  }, [entrada.centroSelecionada]);\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Nome da Sala</th>\r\n            <th>Hora do Fim da Limpeza</th>\r\n            <th>Descrição</th>\r\n            <th>Nrº Participantes</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableInfo\r\n            ?.filter((info) => {\r\n              const tempo = new Date().toLocaleTimeString();\r\n              return info.horaFim < addTimeOnString(tempo.slice(0, 2), tempo.slice(3, 5), info.tempo_limpeza) && info.horaFim > tempo.slice(0, 5);\r\n            })\r\n            .map((info, index) => (\r\n              <tr>\r\n                <td>{info.id_reserva}</td>\r\n                <td>{info.nomesala}</td>\r\n                <td>{info.horaFim.slice(0, 5)}</td>\r\n                <td>Em limpeza...</td>\r\n                <td>{info.nr_participantes}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\nexport default SalaLimpeza;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}